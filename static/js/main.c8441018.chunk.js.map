{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","console","log","Task","task","onDelete","cursor","id","day","Tasks","tasks","map","App","useState","reminder","setTasks","document","getElementById","files","DOMParser","type","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oNAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7B,OACE,wBACEA,QAASA,EACTC,MAAO,CAAEC,gBAAiBJ,GAC1BK,UAAU,MAHZ,SAKGJ,KAKPF,EAAOO,aAAe,CACpBN,MAAO,aASMD,QCrBTQ,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAKhB,OACE,mCACE,6BAAKA,IACL,cAAC,EAAD,CAAQR,MAAM,QAAQC,KAAK,QAAQC,QAPvB,WACdO,QAAQC,IAAI,gBAWhBH,EAAOD,aAAe,CACpBE,MAAO,eAOMD,Q,OCPAI,EAfF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpB,OACE,sBAAKR,UAAU,OAAf,UACE,+BACGO,EAAKX,KACN,cAAC,IAAD,CACEE,MAAO,CAAEH,MAAO,MAAOc,OAAQ,WAC/BZ,QAAS,kBAAMW,EAASD,EAAKG,UAGjC,4BAAIH,EAAKI,UCAAC,EAVD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACtB,OACE,mCACGK,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKG,UCiDTK,MAlDf,WAAgB,IAAD,EACaC,mBAAS,CACjC,CACEN,GAAI,EACJd,KAAM,eACNe,IAAK,QACLM,SAAU,QAEZ,CACEP,GAAI,EACJd,KAAM,eACNe,IAAK,QACLM,SAAU,QAEZ,CACEP,GAAI,EACJd,KAAM,eACNe,IAAK,QACLM,SAAU,UAlBD,mBACNJ,EADM,KACCK,EADD,KA8Bb,OAHqBC,SAASC,eAAe,SAASC,MAAM,GAC7C,IAAIC,UAGjB,sBAAKtB,UAAU,YAAf,UACE,cAAC,EAAD,IACA,iCACE,iDAEE,uBAAOuB,KAAK,OAAOb,GAAG,aAExB,uBACA,wBAAQa,KAAK,SAAb,uBAEDV,EAAMW,OAAS,EACd,cAAC,EAAD,CAAOX,MAAOA,EAAOL,SAnBR,SAACE,GAClBQ,EAASL,EAAMY,QAAO,SAAClB,GAAD,OAAUA,EAAKG,KAAOA,SAoBxC,wBCrCOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BM,M","file":"static/js/main.c8441018.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title }) => {\r\n  const onClick = () => {\r\n    console.log(\"click\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <h1>{title}</h1>\r\n      <Button color=\"green\" text=\"Hello\" onClick={onClick} />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"sdv-checker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete }) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task key={task.id} task={task} onDelete={onDelete} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"appointment1\",\n      day: \"date1\",\n      reminder: \"true\",\n    },\n    {\n      id: 2,\n      text: \"appointment2\",\n      day: \"date2\",\n      reminder: \"true\",\n    },\n    {\n      id: 3,\n      text: \"appointment3\",\n      day: \"date3\",\n      reminder: \"true\",\n    },\n  ]);\n\n  // Delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const selectedFile = document.getElementById(\"input\").files[0];\n  const parser = new DOMParser();\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <form>\n        <label>\n          Upload file:\n          <input type=\"file\" id=\"input\"/>\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} />\n      ) : (\n        \"No Tasks to show.\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}